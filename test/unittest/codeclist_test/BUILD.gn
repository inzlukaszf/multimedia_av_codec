# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/av_codec/config.gni")

module_output_path = "av_codec/unittest"

codeclist_unittest_cflags = [
  "-std=c++17",
  "-fno-rtti",
  "-fno-exceptions",
  "-Wall",
  "-fno-common",
  "-fstack-protector-strong",
  "-Wshadow",
  "-FPIC",
  "-FS",
  "-O2",
  "-D_FORTIFY_SOURCE=2",
  "-fvisibility=hidden",
  "-Wformat=2",
  "-Wdate-time",
  "-Werror",
  "-Wextra",
  "-Wimplicit-fallthrough",
  "-Wsign-compare",
  "-Wunused-parameter",
]

#################################################################################################################codeclist
ohos_unittest("codeclist_capi_unit_test") {
  module_out_path = module_output_path
  include_dirs = [
    "./",
    "./capi",
  ]

  defines = [ "CODECLIST_CAPI_UNIT_TEST" ]

  cflags = codeclist_unittest_cflags

  if (av_codec_support_codeclist) {
    sources = [
      "./capi/codeclist_capi_mock.cpp",
      "./capi/codeclist_capi_mock_factory.cpp",
      "./caps_unit_test.cpp",
      "./codeclist_unit_test.cpp",
    ]
  }

  public_deps =
      [ "$av_codec_root_dir/test/unittest/common:av_codec_capi_unit_test" ]

  external_deps = [
    "c_utils:utils",
    "graphic_surface:surface",
    "graphic_surface:sync_fence",
    "hilog:libhilog",
    "media_foundation:capi_packages",
    "media_foundation:media_foundation",
  ]

  resource_config_file =
      "$av_codec_root_dir/test/unittest/resources/ohos_test.xml"
}

#################################################################################################################codeclist
ohos_unittest("codeclist_inner_unit_test") {
  module_out_path = module_output_path
  include_dirs = [
    "./",
    "./inner",
  ]

  defines = [ "CODECLIST_INNER_UNIT_TEST" ]

  cflags = codeclist_unittest_cflags

  if (av_codec_support_codeclist) {
    sources = [
      "./caps_unit_test.cpp",
      "./codeclist_unit_test.cpp",
      "./inner/codeclist_inner_mock.cpp",
      "./inner/codeclist_inner_mock_factory.cpp",
    ]
  }

  public_deps =
      [ "$av_codec_root_dir/test/unittest/common:av_codec_inner_unit_test" ]

  external_deps = [
    "c_utils:utils",
    "graphic_surface:surface",
    "graphic_surface:sync_fence",
    "hilog:libhilog",
    "media_foundation:media_foundation",
  ]

  resource_config_file =
      "$av_codec_root_dir/test/unittest/resources/ohos_test.xml"
}
