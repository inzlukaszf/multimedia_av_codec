# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/av_codec/config.gni")

module_output_path = "av_codec/unittest"

av_codec_unittest_include_dirs =
    [ "$av_codec_root_dir/interfaces/inner_api/native" ]

av_audio_sink_unittest_cflags = [
  "-O2",
  "-fPIC",
  "-Wall",
  "-fexceptions",
  "-fno-rtti",
  "-Wno-unused-but-set-variable",
  "-Wno-format",
  "-Dprivate=public",
  "-Dprotected=public",
]

##################################################################################################################
ohos_unittest("av_audio_sink_unit_test") {
  sanitize = av_codec_test_sanitize
  module_out_path = module_output_path
  include_dirs = av_codec_unittest_include_dirs
  include_dirs += [
    "$audio_framework_root_dir/interfaces/inner_api/native/audiocommon/include",
    "$av_codec_root_dir/interfaces",
    "$av_codec_root_dir/interfaces/plugin",
    "$av_codec_root_dir/services/media_engine/plugins/sink",
    "$av_codec_root_dir/services/media_engine/modules",
    "$av_codec_root_dir/services/media_engine/modules/sink",
    "$av_codec_root_dir/services/media_engine/plugins/ffmpeg_adapter/common",
    "$media_foundation_root_dir/../../graphic/graphic_surface/interfaces/innerkits/surface",
    "$media_foundation_root_dir/../../graphic/graphic_surface/interface/inner_api/surface",
    "$media_foundation_root_dir/../../graphic/graphic_surface/surface/include",
  ]

  cflags = av_audio_sink_unittest_cflags

  cflags_cc = cflags

  public_configs = []

  if (av_codec_support_test) {
    public_external_deps = [ "ffmpeg:libohosffmpeg" ]

    sources = [
      "./audio_server_sink_plugin_test.cpp",
      "./audio_sink_test.cpp",
      "./subtitle_sink_test.cpp",
      "./sync_manager_test.cpp",
      "./video_sink_test.cpp",
    ]

    sources += [
      "$av_codec_root_dir/services/media_engine/plugins/ffmpeg_adapter/common/ffmpeg_convert.cpp",
      "$av_codec_root_dir/services/media_engine/plugins/ffmpeg_adapter/common/ffmpeg_utils.cpp",
      "$av_codec_root_dir/services/media_engine/plugins/sink/audio_server_sink_plugin.cpp",
    ]
  }

  configs = [
    "$av_codec_root_dir/services/media_engine/plugins/sink:audio_server_sink_plugin_config",
    "$av_codec_root_dir/services/dfx:av_codec_service_log_dfx_public_config",
  ]

  deps = [
    "$av_codec_root_dir/services/dfx:av_codec_service_dfx",
    "$av_codec_root_dir/services/media_engine/modules:av_codec_media_engine_modules",
  ]

  external_deps = [
    "audio_framework:audio_renderer",
    "c_utils:utils",
    "graphic_surface:surface",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_single",
    "media_foundation:media_foundation",
    "safwk:system_ability_fwk",
  ]

  resource_config_file =
      "$av_codec_root_dir/test/unittest/resources/ohos_test.xml"
}
